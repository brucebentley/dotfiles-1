####################################
### settings for i3-gaps-rounded: ###
#####################################

# Default Border
for_window [class="^.*"] border pixel 0
for_window [title="^.*"] border pixel 0

# Default border radius
border_radius 10

############################
### settings for i3-gaps: ###
#############################
# Set gaps variables
set $inner 20
set $outer -4

# Set inner/outer gaps
gaps inner $inner
gaps outer $outer

# TOGGLE GAPS
bindsym $mod+g exec "if [ `i3-msg -t get_tree | grep -Po '.*\\"gaps\\":{\\"inner\\":\K(-|)[0-9]+(?=.*\\"focused\\":true)'` -eq 0 ]; then \
        i3-msg gaps inner current set 0; \
        i3-msg gaps outer current set 0; \
    else \
        i3-msg gaps inner current set $inner; \
        i3-msg gaps outer current set $outer; \
    fi"

# Smart gaps (gaps used if only more than one container on the workspace)
# on|inverse_outer (on=gaps used if only more than one container on the workspace and inverse_outer=enable outer gaps when there is exactly one container)
smart_gaps inverse_outer

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders no_gaps

###################
### KEY BINDING ###
###################

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>
# workspace_layout tabbed

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window none
new_float none

# Hide borders
hide_edge_borders both

# change borders
default_border pixel 0
default_floating_border pixel 0

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:Roboto 10

# USE MOUSE + MODKEY TO DRAG FLOATING WINDOWS
floating_modifier $mod

# Focus by hover mouse over window
focus_follows_mouse yes

# Mouse warping
mouse_warping none

# Popups during fullscreen mode
popup_during_fullscreen smart

# Focus wrapping
focus_wrapping no

# OPENING A TERMINAL
set $Terminal /usr/local/bin/st
bindsym $mod+Return exec $Terminal

# KILL FOCUSED WINDOW
bindsym $mod+Shift+c kill

# MY PROGRAM LAUNCHER (DMENU)
bindsym $mod+Shift+Return exec /usr/bin/dmenu_run -i -f

# MY DMENU SCRIPTS
bindsym Mod1+e exec ./

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Focus parent container
bindsym $mod+p focus parent

# Focus child container
bindsym $mod+c focus child

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+z split v
bindsym $mod+v split h

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

#navigate workspaces next / previous
bindsym $mod+Ctrl+l workspace next
bindsym $mod+Ctrl+h workspace prev

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:ï‚¬
set $ws1 "1:1"
set $ws2 "2:2"
set $ws3 "3:3"
set $ws4 "4:4"
set $ws5 "5:5"
set $ws6 "6:6"
set $ws7 "7:7"
set $ws8 "8:8"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Ctrl+r reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exit

# take screenshot
bindsym $mod+q exec "maim -u -s -m 10 ~/Pictures/screenshot/screenshot-$(date -Iseconds | cut -d'+' -f1).png"
bindsym $mod+Shift+q exec "maim -u -m 10 ~/Pictures/screenshot/screenshot-$(date -Iseconds | cut -d'+' -f1).png"

# Enable media key (Fn)
# Sreen brightness controls
bindsym XF86MonBrightnessUp exec "xbacklight -inc 10"
bindsym XF86MonBrightnessDown exec "xbacklight -dec 10"

# Volume controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
  bindsym h resize shrink width 4 px or 4 ppt
  bindsym k resize grow height 4 px or 4 ppt
  bindsym j resize shrink height 4 px or 4 ppt
  bindsym l resize grow width 4 px or 4 ppt

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# Move floating window
bindsym $mod+m mode "move" focus floating
mode "move" {
  bindsym $mod+Tab focus right

  bindsym h     move left 20px
  bindsym j     move down 20px
  bindsym k     move up 20px
  bindsym l     move right 20px

  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# Resize gaps
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set $inner

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set $inner

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set $outer

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set $outer

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

########################
## STARTUP SERVICE ##
########################
exec_always --no-startup-id /usr/local/bin/compton -b --config '/home/emanon/.config/compton/compton.conf'
exec --no-startup-id i3-msg 'workspace $ws2 ; exec /usr/bin/pulseeffects'
exec --no-startup-id i3-msg 'workspace $ws1 ; exec /usr/local/bin/st'; focus

##################
## BASE16 COLOR ##
##################

# Base16 Gruvbox dark, hard
set $base00 #1d2021
set $base01 #3c3836
set $base02 #504945
set $base03 #665c54
set $base04 #bdae93
set $base05 #d5c4a1
set $base06 #ebdbb2
set $base07 #fbf1c7
set $base08 #fb4934
set $base09 #fe8019
set $base0A #fabd2f
set $base0B #b8bb26
set $base0C #8ec07c
set $base0D #83a598
set $base0E #d3869b
set $base0F #d65d0e
set $transparent #00000000

# Basic bar configuration using the Base16 variables.
bar { # top bar
  status_command i3blocks -c ~/.config/i3/i3blocks/powerline-bar.conf
  i3bar_command i3bar -t
  font pango:Hack 10
  workspace_buttons no
  binding_mode_indicator yes
  tray_padding 0
  tray_output none
  position top
  height 0

    colors {
      background $transparent
      separator  $transparent
      statusline $transparent

        # State             Border  BG      Text
        binding_mode        $base0A $base0A $base00
    }
}

bar { # bottom bar
  i3bar_command i3bar -t
  font pango:Hack 10
  workspace_buttons yes
  strip_workspace_numbers yes
  binding_mode_indicator no
  tray_padding 0
  tray_output primary
  position bottom
  height 0

    colors {
      background $transparent
      separator  $transparent
      statusline $transparent

        # State             Border  BG      Text
        focused_workspace   $base0D $base0D $base00
        active_workspace    $base05 $base03 $base00
        inactive_workspace  $base01 $base01 $base05
        urgent_workspace    $base08 $base08 $base00
    }
}

# Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border  BG      Text    Indicator Child Border
client.focused          $base05 $base0D $base00 $base0D $base00
client.focused_inactive $base01 $base01 $base05 $base03 $base01
client.unfocused        $base01 $base00 $base05 $base01 $base01
client.urgent           $base08 $base08 $base00 $base08 $base08
client.placeholder      $base00 $base00 $base05 $base00 $base00
client.background $base07
