let g:clang_format#detect_style_file=1
let g:clang_format#enable_fallback_style=1
let g:clang_format#style_options = {
			\ "AccessModifierOffset": -4,
			\ "AlignAfterOpenBracket": "Align",
			\ "AlignConsecutiveAssignments": "false",
			\ "AlignConsecutiveDeclarations": "false",
			\ "AlignEscapedNewlines": "Left",
			\ "AlignOperands": "true",
			\ "AlignTrailingComments": "false",
			\ "AllowAllParametersOfDeclarationOnNextLine": "false",
			\ "AllowShortBlocksOnASingleLine": "false",
			\ "AllowShortCaseLabelsOnASingleLine": "false",
			\ "AllowShortFunctionsOnASingleLine": "None",
			\ "AllowShortIfStatementsOnASingleLine": "false",
			\ "AllowShortLoopsOnASingleLine": "false",
			\ "AlwaysBreakAfterDefinitionReturnType": "None",
			\ "AlwaysBreakAfterReturnType": "TopLevelDefinitions",
			\ "AlwaysBreakBeforeMultilineStrings": "false",
			\ "AlwaysBreakTemplateDeclarations": "false",
			\ "BinPackArguments": "true",
			\ "BinPackParameters": "true",
			\ "BreakBeforeBinaryOperators": "None",
			\ "BreakBeforeBraces": "Stroustrup",
			\ "BreakBeforeInheritanceComma": "false",
			\ "BreakBeforeTernaryOperators": "false",
			\ "BreakConstructorInitializersBeforeComma": "false",
			\ "BreakConstructorInitializers": "BeforeComma",
			\ "BreakAfterJavaFieldAnnotations": "false",
			\ "BreakStringLiterals": "false",
			\ "ColumnLimit": 80,
			\ "CompactNamespaces": "false",
			\ "ConstructorInitializerAllOnOneLineOrOnePerLine": "false",
			\ "ConstructorInitializerIndentWidth": 8,
			\ "ContinuationIndentWidth": 8,
			\ "DerivePointerAlignment": "false",
			\ "DisableFormat": "false",
			\ "ExperimentalAutoDetectBinPacking": "false",
			\ "IndentCaseLabels": "false",
			\ "IndentPPDirectives": "None",
			\ "IndentWidth": 8,
			\ "IndentWrappedFunctionNames": "false",
			\ "KeepEmptyLinesAtTheStartOfBlocks": "false",
			\ "MaxEmptyLinesToKeep": 1,
			\ "NamespaceIndentation": "None",
			\ "PenaltyBreakAssignment": 10,
			\ "PenaltyBreakBeforeFirstCallParameter": 30,
			\ "PenaltyBreakComment": 10,
			\ "PenaltyBreakFirstLessLess": 0,
			\ "PenaltyBreakString": 10,
			\ "PenaltyExcessCharacter": 100,
			\ "PenaltyReturnTypeOnItsOwnLine": 60,
			\ "PointerAlignment": "Right",
			\ "ReflowComments": "false",
			\ "SortIncludes": "false",
			\ "SortUsingDeclarations": "false",
			\ "SpaceAfterCStyleCast": "false",
			\ "SpaceAfterTemplateKeyword": "true",
			\ "SpaceBeforeAssignmentOperators": "true",
			\ "SpaceBeforeCtorInitializerColon": "true",
			\ "SpaceBeforeInheritanceColon": "true",
			\ "SpaceBeforeParens": "ControlStatements",
			\ "SpaceBeforeRangeBasedForLoopColon": "true",
			\ "SpaceInEmptyParentheses": "false",
			\ "SpacesBeforeTrailingComments": 1,
			\ "SpacesInAngles": "false",
			\ "SpacesInContainerLiterals": "false",
			\ "SpacesInCStyleCastParentheses": "false",
			\ "SpacesInParentheses": "false",
			\ "SpacesInSquareBrackets": "false",
			\ "TabWidth": 8,
			\ "UseTab": "Always"
			\ }

if has('autocmd')
	augroup EmanonClangFormatAutocmds
		autocmd!
		autocmd Filetype c,cpp ClangFormatAutoEnable
	augroup END
endif
