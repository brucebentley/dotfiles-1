[alias]
	# View the current working tree status using the short format
	s = status -s
	st = status

	# Clone a repository including all submodules
	c = clone --recursive

	# Commit all changes
	ca = !git add -A && git commit -av

	# Commit selected file(s)
	cf = "!f() { git add -A && git commit -av; }; f"

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Find branches containing commit
	fb = "!f() { git branch -a --contains $1; }; f"

	# Find commits by source code
	fc = "!f() { git log --pretty=format:'%C(yellow)%h	%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

	# Find commits by commit message
	fm = "!f() { git log --pretty=format:'%C(yellow)%h	%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

	# Remove branches that have already been merged with master
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d; git remote -v update -p"

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

	# Update all submodules
	update-bundle = pull --recurse-submodules

	# Undo last commit (https://gist.github.com/sethvargo/6b2f7b592853381690bfe3bd00947e8f)
	undo = !git reset HEAD~1 --mixed

[branch]
	autosetupmerge = always
	autosetuprebase = local

[branch "master"]
	rebase = true

[color]
	ui = auto

[color "interactive"]
	prompt = blue reverse

[color "status"]
	untracked = blue

[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

[diff]
	algorithm = histogram
	compactionHeuristic = true

[difftool]
	prompt = false

[grep]
	lineNumber = true

[help]
	autocorrect = 2

[log]
	decorate = short

[merge]
	conflictStyle = diff3
	log = 1000

[pager]
	show-branch = true
	status = true

[protocol]
	version = 2

[push]
	default = simple

[rebase]
	autosquash = true

[rerere]
	enabled = true

[status]
	submodulesummary = true

[submodule]
	fetchJobs = 4

[include]
	path = .gitconfig.local
